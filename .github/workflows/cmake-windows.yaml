name: Build & Test (Windows - Visual Studio 2022 - Qt 5.15.2)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BUILD_TYPE: Release
  QT_VERSION: 5.15.2

jobs:
  build-windows:
    name: Build and Test on Windows (MSVC - Qt 5.15.2)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2019_64

      - name: Configure CMake project
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build project
        run: cmake --build build --config ${{ env.BUILD_TYPE }}

      - name: Verify executables existence
        run: |
          if (!(Test-Path -Path "build/Release/TestApp.exe")) { Write-Error "TestApp.exe not found"; exit 1 }
          if (!(Test-Path -Path "build/Release/QmlTests.exe")) { Write-Error "QmlTests.exe not found"; exit 1 }

      - name: Deploy Qt DLLs for executables
        run: |
          & "D:/a/test-windows/Qt/5.15.2/msvc2019_64/bin/windeployqt.exe" --qmldir=qml build/Release/TestApp.exe
          & "D:/a/test-windows/Qt/5.15.2/msvc2019_64/bin/windeployqt.exe" --qmldir=qml build/tests/qml-tests/Release/QmlTests.exe

      - name: Run tests (offscreen) with environment
        run: |
          cd build
          $env:QT_QPA_PLATFORM="offscreen"
          $env:QML2_IMPORT_PATH="D:/a/test-windows/Qt/5.15.2/msvc2019_64/qml"
          ctest --output-on-failure -C ${{ env.BUILD_TYPE }} -R "QtTests|QmlTests"

      - name: Package executable
        run: |
          mkdir package
          copy build\Release\TestApp.exe package\
          7z a TestApp-windows.zip .\package\*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TestApp-windows
          path: TestApp-windows.zip
